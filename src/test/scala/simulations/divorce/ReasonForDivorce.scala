package simulations.divorce

import com.typesafe.config._
import io.gatling.core.Predef._
import io.gatling.http.Predef._
import simulations.checks.CsrfCheck
import simulations.checks.CsrfCheck.{csrfParameter, csrfTemplate}

object ReasonForDivorce {

    val conf = ConfigFactory.load()
    val baseurl = scala.util.Properties.envOrElse("TEST_URL", conf.getString("baseUrl")).toLowerCase()
    val continuePause = conf.getInt("continuePause")

    val reason = exec(http("DIV01_280_ReasonForDivorce")
        .post("/about-divorce/reason-for-divorce/reason")
        .formParam("reasonForDivorce", "adultery")
        .formParam(csrfParameter, csrfTemplate)
        .check(status.is(200))
        .check(currentLocation.is(baseurl + "/about-divorce/reason-for-divorce/adultery/wish-to-name"))
        .check(CsrfCheck.save))
        .pause(continuePause)

    val adulteryWishToName = exec(http("DIV01_290_AdultryWishToName")
        .post("/about-divorce/reason-for-divorce/adultery/wish-to-name")
        .formParam("reasonForDivorceAdulteryWishToName", "Yes")
        .formParam(csrfParameter, csrfTemplate)
        .check(status.is(200))
        .check(currentLocation.is(baseurl + "/about-divorce/reason-for-divorce/adultery/name-person"))
        .check(CsrfCheck.save))
        .pause(continuePause)

    val adulteryNameOfCoRespondent = exec(http("DIV01_300_AdultryNamePerson")
        .post("/about-divorce/reason-for-divorce/adultery/name-person")
        .formParam("reasonForDivorceAdultery3rdPartyFirstName", "Adulterer")
        .formParam("reasonForDivorceAdultery3rdPartyLastName", "Name")
        .formParam(csrfParameter, csrfTemplate)
        .check(status.is(200))
        .check(currentLocation.is(baseurl + "/about-divorce/reason-for-divorce/adultery/co-respondent-address"))
        .check(CsrfCheck.save))
        .pause(continuePause)

    val adulteryCoRespondentAddress = exec(http("DIV01_310_AdultryCoRespondantAddress")
        .post("/about-divorce/reason-for-divorce/adultery/co-respondent-address")
        .formParam("postcode", "SW1H 9NA")
        .formParam("addressType", "postcode")
        .formParam("searchPostcode", "true")
        .formParam("addressConfirmed", "false")
        .formParam(csrfParameter, csrfTemplate)
        .check(status.is(200))
        .check(CsrfCheck.save))
        .pause(continuePause)
        .exec(http("DIV01_320_AdultryCoRespondantPostcode")
            .post("/about-divorce/reason-for-divorce/adultery/co-respondent-address")
            .formParam("selectAddressIndex", "1")
            .formParam("addressType", "postcode")
            .formParam("selectAddress", "true")
            .formParam("addressConfirmed", "false")
            .formParam("postcode", "SW1H 9NA")
            .formParam(csrfParameter, csrfTemplate)
            .check(status.is(200))
            .check(CsrfCheck.save))
        .pause(continuePause)
        .exec(http("DIV01_330_AdultryCoRespondantAddressTosendThePetition")
            .post("/about-divorce/reason-for-divorce/adultery/co-respondent-address")
            .formParam("addressLine0", "Department for Work & Pensions")
            .formParam("addressLine1", "Caxton House")
            .formParam("addressLine2", "Tothill Street")
            .formParam("addressLine3", "London")
            .formParam("addressLine4", "SW1H 9NA")
            .formParam("addressType", "postcode")
            .formParam("addressConfirmed", "true")
            .formParam("postcode", "SW1H 9NA")
            .formParam(csrfParameter, csrfTemplate)
            .check(status.is(200))
            .check(currentLocation.is(baseurl + "/about-divorce/reason-for-divorce/adultery/where"))
            .check(CsrfCheck.save))
        .pause(continuePause)

    val adulteryKnowWhere = exec(http("DIV01_340_AdulteryWhere")
        .post("/about-divorce/reason-for-divorce/adultery/where")
        .formParam("reasonForDivorceAdulteryKnowWhere", "Yes")
        .formParam(csrfParameter, csrfTemplate)
        .check(status.is(200))
        .check(currentLocation.is(baseurl + "/about-divorce/reason-for-divorce/adultery/when"))
        .check(CsrfCheck.save))
        .pause(continuePause)

    val adulteryKnowWhen = exec(http("DIV01_350_AdultryWhen")
        .post("/about-divorce/reason-for-divorce/adultery/when")
        .formParam("reasonForDivorceAdulteryKnowWhen", "Yes")
        .formParam(csrfParameter, csrfTemplate)
        .check(status.is(200))
        .check(currentLocation.is(baseurl + "/about-divorce/reason-for-divorce/adultery/details"))
        .check(CsrfCheck.save))
        .pause(continuePause)

    val adulteryDetails = exec(http("DIV01_360_AdultryDetails")
        .post("/about-divorce/reason-for-divorce/adultery/details")
        .formParam("reasonForDivorceAdulteryWhenDetails", "Last year.")
        .formParam("reasonForDivorceAdulteryWhereDetails", "Away from home.")
        .formParam("reasonForDivorceAdulteryDetails", "Some details.")
        .formParam(csrfParameter, csrfTemplate)
        .check(status.is(200))
        .check(currentLocation.is(baseurl + "/about-divorce/legal-proceedings"))
        .check(CsrfCheck.save))
        .pause(continuePause)

}